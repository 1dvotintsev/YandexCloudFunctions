import json
import psycopg2
import base64

# Данные для подключения к базе данных
host = "79.174.88.41"
port = 17429
user = "admin_1"
password = "12345bB!"
db_name = "db_reactions"

def handler(event, context):
    try:
        # Выводим входящие данные для отладки
        print("Received event:", event)
        
        if event['isBase64Encoded']:
            body = base64.b64decode(event['body']).decode('utf-8')
        else:
            body = event['body']
        
        data = json.loads(body)
        user_id = data['user_id']
        place_id = data['place_id']
        reaction = data['reaction']
    except (KeyError, json.JSONDecodeError) as e:
        print("Error parsing input:", str(e))
        return {
            'statusCode': 400,
            'body': json.dumps({'error': 'Invalid input'})
        }

    if reaction not in (1, -1):
        return {
            'statusCode': 400,
            'body': json.dumps({'error': 'Invalid reaction'})
        }

    connection = psycopg2.connect(
        host=host,
        port=port,
        user=user,
        password=password,
        dbname=db_name,
        options="-c client_encoding=utf8"
    )

    try:
        with connection.cursor() as cursor:
            sql = """
                INSERT INTO reactions (user_id, place_id, reaction)
                VALUES (%s, %s, %s)
                ON CONFLICT (user_id, place_id)
                DO UPDATE SET reaction = EXCLUDED.reaction
            """
            cursor.execute(sql, (user_id, place_id, reaction))
            connection.commit()
            return {
                'statusCode': 200,
                'body': json.dumps({'message': 'Reaction recorded'})
            }
    except Exception as e:
        connection.rollback()
        return {
            'statusCode': 500,
            'body': json.dumps({'error': str(e)})
        }
    finally:
        connection.close()
