from flask import Flask, request, jsonify
import psycopg2
import json

app = Flask(__name__)

def create_connection():
    return psycopg2.connect(
        host="79.174.88.41",
        port=17429,
        user="admin_1",
        password="12345bB!",
        database="db_users"
    )

@app.route('/auth', methods=['POST'])
def authenticate():
    if request.args.get('integration') == 'raw':
        try:
            data = request.get_data(as_text=True)
            data = json.loads(data)
        except Exception as e:
            return jsonify({"error": "Invalid raw data"}), 400
    else:
        try:
            data = request.get_json(force=True)
        except Exception as e:
            return jsonify({"error": "Invalid JSON data"}), 400

    email = data.get('email')
    password = data.get('password')

    if not email or not password:
        return jsonify({"error": "Please provide email and password"}), 400

    try:
        connection = create_connection()
        cursor = connection.cursor()
        cursor.execute(
            "SELECT * FROM users_db WHERE email = %s AND password = %s",
            (email, password)
        )
        user = cursor.fetchone()
        cursor.close()
        connection.close()

        if user:
            return jsonify({"authenticated": True}), 200
        else:
            return jsonify({"authenticated": False}), 401
    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    from werkzeug.serving import run_simple

    def run_flask_app():
        run_simple('0.0.0.0', 8080, app)

    run_flask_app()
